name: ci

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/**.md"
      - "**/LICENSE"
      - "**/.gitignore"
      - "**/.github/ISSUE_TEMPLATE/**"
      - "**/.config/**"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/**.md"
      - "**/LICENSE"
      - "**/.gitignore"
      - "**/.github/ISSUE_TEMPLATE/**"
      - "**/.config/**"

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4.2.1
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Clippy
        run: cargo clippy --all-features --workspace -- -D warnings

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@b38f618be2096d3fc834d239085766ecdc8f4b62
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all --check

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: clippy

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4.2.1
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Tests
        run: cargo test --all-features --workspace

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable

      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run Coverage
        run: cargo tarpaulin --out Html

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4.6.1
        with:
          name: coverage-report
          path: ./tarpaulin-report.html
